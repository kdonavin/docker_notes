services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      #  POSTGRES_USER: user
       POSTGRES_PASSWORD: postgres_password
      #  POSTGRES_DB: mydb
    # ports:
    #   - "5432:5432"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis
    # ports:
    #   - "6379:6379"
    # volumes:
    #   - redis_data:/data
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    # image: nginx:latest
    container_name: nginx
    ports:
      - 3050:80
    depends_on:
      - api
      - client
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: server
    # ports:
      # - "8000:8000"
    # depends_on:
      # - postgres
      # - redis
    # environment:
      # DATABASE_URL: postgres://postgres:postgres_password@postgres:5432/postgres
      # REDIS_URL: redis://redis:6379/0
    volumes:
      - /app/node_modules/
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGPASSWORD=postgres_password
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=postgres
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: client
    # ports:
      # - "3000:3000"
    # depends_on:
      # - server
    volumes:
      - /app/node_modules/ #prevents overwriting node_modules
      - ./client:/app
    environment:
      - WDS_SOCKET_PORT=0 # disables webpack dev server socket
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    container_name: worker
    volumes:
      - /app/node_modules/
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379